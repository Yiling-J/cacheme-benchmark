name: Benchmark

on:
  pull_request:
  push:
    branches:
      - "main"
  schedule:
    - cron: '0 0 * * *'

jobs:
  run_benchmarks:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: username
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd "mongosh --eval 'db.version()'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Pull Changes
        if: github.event_name != 'pull_request'
        run: git pull origin
      - name: Install Requirements
        run: pip install -r requirements.txt
      - name: Cache Cacheme
        uses: actions/cache@v3
        with:
          path: cacheme/*
          key: Cacheme
      - name: Run Benchmarks
        shell: bash -l {0}
        run: |-
          asv machine --machine ubuntu-latest --yes
          asv continuous --interleave-processes -a processes=2 --split --show-stderr 'HEAD^' 'HEAD'
      - name: Commit results
        if: github.event_name != 'pull_request'
        run: |
          git config user.name "Github Bot"
          git config user.email "results_bot@github.com"
          git add -f results/*
          git commit -m "Results for ubuntu-latest added [skip ci]"
          git push origin

  call_publish_results_workflow:
      needs: run_benchmarks
      if: github.event_name != 'pull_request'
      uses: django/django-asv/.github/workflows/publish-results.yml@main